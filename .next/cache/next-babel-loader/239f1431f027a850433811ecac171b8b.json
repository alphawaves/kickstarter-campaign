{"ast":null,"code":"// require('dotenv').config();\nimport web3 from './web3';\nimport * as CampaignFactory from '../build/contracts/CampaignFactory'; // var fs = require('fs');\n// var contract_abi = JSON.parse(fs.readFileSync('../build/contracts/CampaignFactory', 'utf8'));\n// import secrets from \"../secrets\"\n// const secret = JSON.parse(secrets)\n// const abi = JSON.parse(CampaignFactory)\n\nconst abi = [{\n  \"inputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"constructor\"\n}, {\n  \"constant\": true,\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"deployedCampaigns\",\n  \"outputs\": [{\n    \"internalType\": \"address\",\n    \"name\": \"\",\n    \"type\": \"address\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}, {\n  \"constant\": false,\n  \"inputs\": [{\n    \"internalType\": \"uint256\",\n    \"name\": \"minimum\",\n    \"type\": \"uint256\"\n  }],\n  \"name\": \"createCampaign\",\n  \"outputs\": [],\n  \"payable\": false,\n  \"stateMutability\": \"nonpayable\",\n  \"type\": \"function\"\n}, {\n  \"constant\": true,\n  \"inputs\": [],\n  \"name\": \"getDeployedCampaigns\",\n  \"outputs\": [{\n    \"internalType\": \"address[]\",\n    \"name\": \"\",\n    \"type\": \"address[]\"\n  }],\n  \"payable\": false,\n  \"stateMutability\": \"view\",\n  \"type\": \"function\"\n}]; // TODO: use fs.readFileSync for this? https://medium.com/@piyopiyo/how-to-get-contract-abi-in-truffle-22d0c0457ceb\n\nconst instance = new web3.eth.Contract(abi, process.env.contractAddress);\nexport default instance;","map":{"version":3,"sources":["/home/sharan/kickstarter-campaign/ethereum/factory.js"],"names":["web3","CampaignFactory","abi","instance","eth","Contract","process","env","contractAddress"],"mappings":"AAAA;AAEA,OAAOA,IAAP,MAAiB,QAAjB;AAEA,OAAO,KAAKC,eAAZ,MAAiC,oCAAjC,C,CAEA;AACA;AACA;AAEA;AACA;;AACA,MAAMC,GAAG,GAAG,CACR;AACE,YAAU,EADZ;AAEE,aAAW,KAFb;AAGE,qBAAmB,YAHrB;AAIE,UAAQ;AAJV,CADQ,EAOR;AACE,cAAY,IADd;AAEE,YAAU,CACR;AACE,oBAAgB,SADlB;AAEE,YAAQ,EAFV;AAGE,YAAQ;AAHV,GADQ,CAFZ;AASE,UAAQ,mBATV;AAUE,aAAW,CACT;AACE,oBAAgB,SADlB;AAEE,YAAQ,EAFV;AAGE,YAAQ;AAHV,GADS,CAVb;AAiBE,aAAW,KAjBb;AAkBE,qBAAmB,MAlBrB;AAmBE,UAAQ;AAnBV,CAPQ,EA4BR;AACE,cAAY,KADd;AAEE,YAAU,CACR;AACE,oBAAgB,SADlB;AAEE,YAAQ,SAFV;AAGE,YAAQ;AAHV,GADQ,CAFZ;AASE,UAAQ,gBATV;AAUE,aAAW,EAVb;AAWE,aAAW,KAXb;AAYE,qBAAmB,YAZrB;AAaE,UAAQ;AAbV,CA5BQ,EA2CR;AACE,cAAY,IADd;AAEE,YAAU,EAFZ;AAGE,UAAQ,sBAHV;AAIE,aAAW,CACT;AACE,oBAAgB,WADlB;AAEE,YAAQ,EAFV;AAGE,YAAQ;AAHV,GADS,CAJb;AAWE,aAAW,KAXb;AAYE,qBAAmB,MAZrB;AAaE,UAAQ;AAbV,CA3CQ,CAAZ,C,CA4DE;;AACF,MAAMC,QAAQ,GAAG,IAAIH,IAAI,CAACI,GAAL,CAASC,QAAb,CACfH,GADe,EACVI,OAAO,CAACC,GAAR,CAAYC,eADF,CAAjB;AAIA,eAAeL,QAAf","sourcesContent":["// require('dotenv').config();\n\nimport web3 from './web3';\n\nimport * as CampaignFactory from '../build/contracts/CampaignFactory';\n\n// var fs = require('fs');\n// var contract_abi = JSON.parse(fs.readFileSync('../build/contracts/CampaignFactory', 'utf8'));\n// import secrets from \"../secrets\"\n\n// const secret = JSON.parse(secrets)\n// const abi = JSON.parse(CampaignFactory)\nconst abi = [\n    {\n      \"inputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"constructor\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"deployedCampaigns\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address\",\n          \"name\": \"\",\n          \"type\": \"address\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": false,\n      \"inputs\": [\n        {\n          \"internalType\": \"uint256\",\n          \"name\": \"minimum\",\n          \"type\": \"uint256\"\n        }\n      ],\n      \"name\": \"createCampaign\",\n      \"outputs\": [],\n      \"payable\": false,\n      \"stateMutability\": \"nonpayable\",\n      \"type\": \"function\"\n    },\n    {\n      \"constant\": true,\n      \"inputs\": [],\n      \"name\": \"getDeployedCampaigns\",\n      \"outputs\": [\n        {\n          \"internalType\": \"address[]\",\n          \"name\": \"\",\n          \"type\": \"address[]\"\n        }\n      ],\n      \"payable\": false,\n      \"stateMutability\": \"view\",\n      \"type\": \"function\"\n    }\n  ]\n\n  // TODO: use fs.readFileSync for this? https://medium.com/@piyopiyo/how-to-get-contract-abi-in-truffle-22d0c0457ceb\nconst instance = new web3.eth.Contract(\n  abi, process.env.contractAddress\n)\n\nexport default instance;"]},"metadata":{},"sourceType":"module"}